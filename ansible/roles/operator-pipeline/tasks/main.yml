---
- name: Creates and init service accounts
  block:
    - name: Create service account
      k8s:
        state: present
        namespace: "{{ oc_namespace }}"
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: "{{ service_account_name }}"

    - name: Grant ansible service account admin access
      k8s:
        state: present
        namespace: "{{ oc_namespace }}"
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            name: "{{ service_account_name }}"
          roleRef:
            kind: ClusterRole
            name: admin
          subjects:
            - kind: ServiceAccount
              name: "{{ service_account_name }}"

  tags:
    - init

- name: Create Operator pipeline cert secret
  no_log: yes
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: operator-pipeline-api-certs
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        operator-pipeline.key: "{{ lookup('file', operator_pipeline_private_key_local_path, rstrip=False) | b64encode }}"
        operator-pipeline.pem: "{{ lookup('file', operator_pipeline_private_cert_local_path, rstrip=False) | b64encode }}"

- name: Grant registry access
  block:
    - name: Create Operator pipeline quay token secret
      no_log: yes
      k8s:
        state: present
        force: yes
        namespace: "{{ oc_namespace }}"
        definition:
          apiVersion: v1
          kind: Secret
          type: kubernetes.io/dockerconfigjson
          metadata:
            name: registry-dockerconfig-secret
            labels:
              app: operator-pipeline
              suffix: "{{ suffix }}"
              env: "{{ env }}"
          data:
            .dockerconfigjson: "{{ lookup('file', operator_pipeline_quay_token, rstrip=False) | b64encode }}"
    - name: Link secret with pipeline service account (for imagestream operations)
      k8s:
        state: present
        force: yes
        namespace: "{{ oc_namespace }}"
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: pipeline
          secrets:
            - name: registry-dockerconfig-secret

- name: Create Operator pipeline github bot token secret
  no_log: yes
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: github-bot-token
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        github_bot_token: "{{ lookup('file', operator_pipeline_github_bot_token, rstrip=False) | b64encode }}"

- name: Create Operator pipeline github webhook secret
  no_log: yes
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: github-webhook-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        webhook-secret: "{{ lookup('file', operator_pipeline_webhook_secret, rstrip=False) | b64encode }}"

- name: Create Operator pipeline kerberos keytab secret
  no_log: yes
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: kerberos-keytab
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        keytab: "{{ lookup('file', kerberos_keytab, rstrip=False) | b64encode }}"

- name: Deploy pipeline tasks
  k8s:
    state: present
    apply: yes
    namespace: "{{ oc_namespace }}"
    definition: "{{ lookup('template', '{{ item }}') }}"
  with_fileglob:
    - ../templates/openshift/tasks/*

- name: Deploy pipelines
  k8s:
    state: present
    apply: yes
    namespace: "{{ oc_namespace }}"
    definition: "{{ lookup('template', '{{ item }}') }}"
  with_items:
    - ../templates/openshift/pipelines/operator-hosted-pipeline.yml
    - ../templates/openshift/pipelines/operator-release-pipeline.yml


- name: Create cleaning CronJob
  k8s:
    state: present
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: batch/v1beta1
      kind: CronJob
      metadata:
        name: pipelinerun-cleaner
      spec:
        # every 5 min
        schedule: "*/5 * * * *"
        jobTemplate:
          spec:
            template:
              spec:
                serviceAccountName: "{{ service_account_name }}"
                containers:
                  - name: tkn
                    image: registry.redhat.io/openshift-pipelines/pipelines-cli-tkn-rhel8:0.19.0-2
                    command: ["tkn", "pipelinerun", "delete", "--keep", '"{{ preserve_after_cleanup }}"']
                restartPolicy: OnFailure

- include: tasks/operator-hosted-pipeline-trigger.yml
